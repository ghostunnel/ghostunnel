---
name: Release

on:
  push:
    tags: [ "*" ]

jobs:
  build-unix:
    name: Build (Unix)
    strategy:
      matrix:
        version: [1.16.x]
        target: 
          - { os: 'darwin', platform: 'macos-latest', arch: 'amd64' }
          - { os: 'linux', platform: 'ubuntu-latest', arch: 'amd64' }
    runs-on: ${{ matrix.target.platform }}
    steps:
      - name: Set up toolchain
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.version }}
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build binary
        run: CGO_ENABLED=1 GOARCH=${{ matrix.target.arch }} make ghostunnel
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ghostunnel-${{ matrix.target.os }}-${{ matrix.target.arch }}
          path: ghostunnel 

  build-windows:
    name: Build (Windows)
    strategy:
      matrix:
        version: [1.16.x]
        target: 
          - { os: 'windows', platform: 'windows-latest', arch: 'amd64' }
    runs-on: ${{ matrix.target.platform }}
    steps:
      - name: Set up toolchain
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.version }}
        id: go
      - name: Check out code
        uses: actions/checkout@v2
      - name: Build binary
        run: make ghostunnel
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ghostunnel-${{ matrix.target.os }}-${{ matrix.target.arch }}
          path: ghostunnel 

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: [ build-unix, build-windows ]
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v2
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: "Release Build (Draft)"
          body: "Release Build (from ${{ github.ref }}/${{ github.sha }})"
          draft: true
          prerelease: true

  add-assets:
    name: Add assets
    runs-on: ubuntu-latest
    needs: [ build-unix, build-windows, release ]
    strategy:
      matrix:
        target: 
        - { os: 'darwin', arch: 'amd64' }
        - { os: 'linux', arch: 'amd64' }
        - { os: 'windows', arch: 'amd64' }
    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ghostunnel-${{ matrix.target.os }}-${{ matrix.target.arch }}
          path: dist
      - name: Show files 
        run: ls -R
      - name: Upload artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./dist/ghostunnel
          asset_name: ghostunnel-${{ matrix.target.os }}-${{ matrix.target.arch }}
          asset_content_type: application/octet-stream
